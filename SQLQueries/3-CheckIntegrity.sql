USE D4T4Records;

/*	SQL QUERY TO CHECK VIOLATIONS IN ENTITY & REFERENTIAL INTEGRITY	*/  

/*	SQL QUERY TO CHECK ENTITY INTEGRITY: 
	CHECK IF THERE ARE ANY NULL OR DUPLICATE PRIMARY KEYS	*/

/*	CHECK FOR NULL PRIMARY KEYS IN ONE TABLES IN ONE TO MANY RELATIONSHIP: CUSTOMER, TECHNICIAN, ARTIST AND PRODUCER	*/
SELECT CustomerID, TechID, ArtistID, ProducerID FROM Customer, Technician, Artist, Producer
WHERE (CustomerID IS NULL) OR (TechID IS NULL) OR (ArtistID IS NULL) OR (ProducerID IS NULL);

/*	CHECK FOR NULL PRIMARY KEYS IN SUPERTYPE TABLE: RECORD (WHICH IS ALSO A MANY TABLE IN ONE TO MANY)	*/
SELECT RecordID FROM Record 
WHERE (RecordID IS NULL);

/*	CHECK FOR NULL PRIMARY KEYS IN RECORD SUB TYPE TABLES: VINYL, CD AND INSTRUMENT	*/
SELECT VinylID, CDID, InstrumentID FROM Vinyl, CD, Instrument
WHERE (VinylID IS NULL) OR (CDID IS NULL) OR (InstrumentID IS NULL);

/*	CHECK FOR NULL PRIMARY KEYS IN CD SUB TYPE TABLES: MUSIC AND MOVIE (MOVIE IS ALSO A MANY TABLE)	*/
SELECT MusicID, MovieID FROM Movie, Music 
WHERE (MusicID IS NULL) OR (MovieID IS NULL);

/*	CHECK FOR NULL COMPOSITE PRIMARY KEYS IN MULTIVALUED ATTRIBUTE TABLES: CUSTOMERPAYMENT, MUSICGENRE AND MOVIEGENRE	*/
SELECT	PaymentMethod, CustomerID, GenreStyle, MusicID, GenreTheme, MovieID
FROM	CustomerPayment, MusicGenre, MovieGenre
WHERE	(PaymentMethod OR CustomerID OR GenreStyle OR MusicID OR GenreTheme OR MovieID) IS NULL;

/*	CHECK FOR NULL COMPOSITE PRIMARY KEYS IN BRIDGE TABLES: REPAIR AND COLLABORATION	*/
SELECT TechID, InstrumentID, ArtistID, MusicID FROM Repair, Collaboration
WHERE (TechID IS NULL) OR (InstrumentID IS NULL) OR (ArtistID IS NULL) OR (MusicID IS NULL);
		
        
/*	CHECK FOR DUPLICATE PRIMARY KEYS IN ONE TABLES IN ONE TO MANY RELATIONSHIP: CUSTOMER, TECHNICIAN, ARTIST AND PRODUCER	*/
SELECT CustomerID, TechID, ArtistID, ProducerID FROM Customer, Technician, Artist, Producer
GROUP BY CustomerID, TechID, ArtistID, ProducerID 
HAVING (COUNT(CustomerID) > 1) OR (COUNT(TechID) > 1) OR (COUNT(ArtistID) > 1) OR (COUNT(ProducerID) > 1);

/*	CHECK FOR DUPLICATE PRIMARY KEYS IN SUPERTYPE TABLE: RECORD (WHICH IS ALSO A MANY TABLE IN ONE TO MANY)	*/
SELECT RecordID FROM Record 
GROUP BY RecordID HAVING COUNT(RecordID) > 1;

/*	CHECK FOR DUPLICATE PRIMARY KEYS IN RECORD SUB TYPE TABLES: VINYL, CD AND INSTRUMENT	*/
SELECT VinylID, CDID, InstrumentID FROM Vinyl, CD, Instrument
GROUP BY VinylID, CDID, InstrumentID HAVING (COUNT(VinylID) > 1) OR (COUNT(CDID) > 1) OR (COUNT(InstrumentID) > 1);

/*	CHECK FOR DUPLICATE PRIMARY KEYS IN CD SUB TYPE TABLES: MUSIC AND MOVIE (MOVIE IS ALSO A MANY TABLE)	*/
SELECT MusicID, MovieID FROM Movie, Music 
GROUP BY MusicID, MovieID HAVING (COUNT(MusicID) > 1) OR (COUNT(MovieID) > 1);

/*	CHECK FOR DUPLICATE COMPOSITE PRIMARY KEYS IN MULTIVALUED ATTRIBUTE TABLES: CUSTOMERPAYMENT, MUSICGENRE AND MOVIEGENRE	*/
SELECT	CONCAT(PaymentMethod, CustomerID) AS PaymentID, CONCAT(GenreStyle, MusicID) AS StyleID, 
		CONCAT(GenreTheme, MovieID) AS ThemeID FROM CustomerPayment, MusicGenre, MovieGenre
GROUP BY PaymentID, StyleID, ThemeID HAVING (COUNT(PaymentID) > 1) OR (COUNT(StyleID) > 1) OR (COUNT(ThemeID) > 1);

/*	CHECK FOR DUPLICATE COMPOSITE PRIMARY KEYS IN BRIDGE TABLES: REPAIR AND COLLABORATION	*/
SELECT CONCAT(TechID, InstrumentID) AS RepairID, CONCAT(ArtistID, MusicID) AS CollabID FROM Repair, Collaboration
GROUP BY RepairID, CollabID HAVING (COUNT(RepairID) > 1) OR (COUNT(CollabID) > 1);



/*	SQL QUERY TO CHECK REFERENTIAL INTEGRITY: 
	CHECK IF THE FOREIGN KEYS DO NOT MATCH THE PRIMARY KEYS REFERENCED FROM OTHER TABLES	*/

/*	CHECK IF FOREIGN KEYS OF RECORD TABLE DO NOT MATCH PRIMARY KEYS OF CUSTOMER TABLE	*/
SELECT CustomerID FROM Record
WHERE CustomerID NOT IN (SELECT CustomerID FROM Customer);

/*	CHECK IF FOREIGN KEYS OF MOVIE TABLE DO NOT MATCH PRIMARY KEYS OF PRODUCER TABLE	*/
SELECT ProducerID FROM Movie
WHERE ProducerID NOT IN (SELECT ProducerID FROM Producer);

/*	CHECK IF FOREIGN KEYS OF REPAIR TABLE DO NOT MATCH PRIMARY KEYS OF TECHNICIAN AND INSTRUMENT TABLES	*/
SELECT TechID, InstrumentID FROM Repair
WHERE (TechID NOT IN (SELECT TechID FROM Technician)) OR (InstrumentID NOT IN (SELECT InstrumentID FROM Instrument)); 

/*	CHECK IF FOREIGN KEYS OF COLLABORATION TABLE DO NOT MATCH PRIMARY KEYS OF ARTIST AND MUSIC TABLES	*/
SELECT ArtistID, MusicID FROM Collaboration
WHERE (ArtistID NOT IN (SELECT ArtistID FROM Artist)) OR (MusicID NOT IN (SELECT MusicID FROM Music));

/*	CHECK IF FOREIGN KEYS OF CUSTOMERPAYMENT TABLE DO NOT MATCH PRIMARY KEYS OF CUSTOMER TABLE	*/
SELECT CustomerID FROM CustomerPayment
WHERE CustomerID NOT IN (SELECT CustomerID FROM Customer);

/*	CHECK IF FOREIGN KEYS OF MUSICGENRE TABLE DO NOT MATCH PRIMARY KEYS OF MUSIC TABLE	*/
SELECT MusicID FROM MusicGenre
WHERE MusicID NOT IN (SELECT MusicID FROM Music);

/*	CHECK IF FOREIGN KEYS OF MOVIEGENRE TABLE DO NOT MATCH PRIMARY KEYS OF MOVIE TABLE	*/
SELECT MovieID FROM MovieGenre
WHERE MovieID NOT IN (SELECT MovieID FROM Movie);